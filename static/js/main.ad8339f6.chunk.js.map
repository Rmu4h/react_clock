{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","timerId","runClock","setState","console","log","toLocaleString","this","setInterval","prevProps","oldName","clockName","newName","props","clearInterval","toLocaleTimeString","React","Component","App","isClockVisible","hideClock","showClock","randomName","Math","floor","random","className","role","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAe,CACbC,KAAM,IAAIC,MAFd,EAKEC,aALF,IA0BEC,SAAW,WACT,EAAKC,SAAS,CAAEJ,KAAM,IAAIC,OAC1BI,QAAQC,IAAI,EAAKP,MAAMC,KAAKO,mBA5BhC,uDAOE,WACEC,KAAKN,QAAUO,YAAYD,KAAKL,SAAU,OAR9C,gCAWE,SAAmBO,GACjB,IAAMC,EAAUD,EAAUE,UACpBC,EAAUL,KAAKM,MAAMF,UAEvBD,IAAYE,GACdR,QAAQC,IAAR,qCAA0CK,EAA1C,eAAwDE,MAhB9D,kCAoBE,WACML,KAAKN,SACPa,cAAcP,KAAKN,WAtBzB,oBA+BE,WACE,OACE,8CAEG,IACAM,KAAKT,MAAMC,KAAKgB,4BApCzB,GAA2BC,IAAMC,WCD3BC,E,4MACJpB,MAAe,CACbqB,gBAAgB,EAChBR,UAAW,G,EAGbS,UAAY,WACV,EAAKjB,SAAS,CAAEgB,gBAAgB,K,EAGlCE,UAAY,WACV,EAAKlB,SAAS,CAAEgB,gBAAgB,K,EAGlCG,WAAa,WACX,EAAKnB,SAAS,CAAEQ,UAAWY,KAAKC,MAAsB,IAAhBD,KAAKE,a,4CAG7C,WACE,IAAQN,EAAmBZ,KAAKT,MAAxBqB,eAER,OACE,sBAAKO,UAAU,MAAf,UACE,6CACCP,GAAkB,cAAC,EAAD,CAAOR,UAAWJ,KAAKT,MAAMa,YAChD,sBAAKe,UAAU,aAAaC,KAAK,QAAQ,aAAW,6BAApD,UACE,wBACEC,KAAK,SACLF,UAAU,kBACVG,QAAStB,KAAKc,UAHhB,wBAOA,wBACEO,KAAK,SACLF,UAAU,iBACVG,QAAStB,KAAKa,UAHhB,wBAOA,wBACEQ,KAAK,SACLF,UAAU,kBACVG,QAAStB,KAAKe,WAHhB,uC,GAxCQN,IAAMC,WAqDTC,IC3DfY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ad8339f6.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  clockName: number;\n}\n\ninterface State {\n  time: Date;\n}\n\nexport class Clock extends React.Component<Props, State> {\n  state: State = {\n    time: new Date(),\n  };\n\n  timerId?: NodeJS.Timer;\n\n  componentDidMount() {\n    this.timerId = setInterval(this.runClock, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const oldName = prevProps.clockName;\n    const newName = this.props.clockName;\n\n    if (oldName !== newName) {\n      console.log(`The Clock was renamed from ${oldName} to ${newName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  runClock = () => {\n    this.setState({ time: new Date() });\n    console.log(this.state.time.toLocaleString());\n  };\n\n  render() {\n    return (\n      <p>\n        Current time:\n        {' '}\n        {this.state.time.toLocaleTimeString()}\n      </p>\n    );\n  }\n}\n\nexport default Clock;\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\ninterface State {\n  isClockVisible: boolean;\n  clockName: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    isClockVisible: true,\n    clockName: 0,\n  };\n\n  hideClock = () => {\n    this.setState({ isClockVisible: false });\n  };\n\n  showClock = () => {\n    this.setState({ isClockVisible: true });\n  };\n\n  randomName = () => {\n    this.setState({ clockName: Math.floor(Math.random() * 100) });\n  };\n\n  render(): React.ReactNode {\n    const { isClockVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {isClockVisible && <Clock clockName={this.state.clockName} />}\n        <div className=\"btn-group \" role=\"group\" aria-label=\"Basic mixed styles example\">\n          <button\n            type=\"button\"\n            className=\"btn btn-success\"\n            onClick={this.showClock}\n          >\n            Show Clock\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-danger\"\n            onClick={this.hideClock}\n          >\n            Hide Clock\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-warning\"\n            onClick={this.randomName}\n          >\n            Set random name\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}